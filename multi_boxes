<html>
<head>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-dom.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.13.3/JSXTransformer.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.24.0/babel.js"></script>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script src = "https://code.jquery.com/jquery-2.1.3.min.js" type = "text/javascript"></script>
  <script src="https://fastcdn.org/Underscore.js/1.8.3/underscore-min.js"></script>
  <script src = "https://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js" type = "text/javascript"></script>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/react-bootstrap/0.32.1/react-bootstrap.min.js"></script>
  <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/react-bootstrap/0.32.1/react-bootstrap.min.js"></script>
  <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/accounting.js/0.4.1/accounting.js"></script>
</head>
  <body>
    <div id='app'></div>
    <script type='text/babel'>
      class DuplicateElements extends React.Component{
        constructor(props){
          super(props)
          this.buttonDuplicator = this.buttonDuplicator.bind(this)
          this.elementCounter = this.elementCounter.bind(this)
          this.state = {
            numberOfElements: 0,
            optionDivStyle: {
              position: 'relative',
              left: '28%'
            },
            inputStyle: {
              position: 'relative',
              height: '13%',
              width: '101%'
            },
            saveButtonStyle: {
              position: 'relative',
              right: '-104%'
            },
            deleteButtonStyle: {
              position: 'relative',
              right: '-107%'
            }
          }
          this.buttonArray = []
        }
          counter = this.props.counter || 0
          elementCounter = () => {
            this.counter++
            this.buttonDuplicator(this.counter)
            this.setState({
              numberOfElements: this.state.numberOfElements++
            })
          }
          formatMoney = (event) => {
            var value = parseInt(event.target.value)
              var formattedNumber = accounting.formatMoney(value);
              event.target.value = formattedNumber
          }
          unformatMoney = (event) => {
              var unFormattedNumber = accounting.unformat(event.target.value);
              event.target.value = unFormattedNumber
              event.target.select()
          }
          buttonDuplicator = (numberOfButtons) => {
            var DropdownButton = ReactBootstrap.DropdownButton
            var ButtonToolbar = ReactBootstrap.ButtonToolbar
            var MenuItem = ReactBootstrap.MenuItem
            for (let buttonCounter = 0; buttonCounter < numberOfButtons; buttonCounter++){
              this.buttonArray.push(
                <tr>
                  <td>
                      <div id='form_wrapper' className="form-group" style={this.state.optionDivStyle}>
                          <label for="usr">Title:</label>
                          <input type="text" placeholder='Name' style={this.state.inputStyle} className="form-control" id="usr"></input>
                          <input type="text" placeholder='Amount' onFocus={this.unformatMoney}  onBlur={this.formatMoney} style={this.state.inputStyle} className="form-control" id="usr"></input>
                          <ButtonToolbar>
                            <DropdownButton title="Type" id="dropdown-size-medium">
                              <MenuItem eventKey="1">Income</MenuItem>
                              <MenuItem eventKey="2">Expense</MenuItem>
                              <MenuItem divider />
                              <MenuItem eventKey="3">Other</MenuItem>
                            </DropdownButton>
                          </ButtonToolbar>
                          <button style={this.state.saveButtonStyle} className="btn btn-primary">Save</button>
                          <button style={this.state.deleteButtonStyle} className="btn btn-danger">Delete</button>
                      </div>
                      <br />
                      <br />
                      <br />
                      <br />
                      <br />
                      <br />
                      <br />
                      <br />
                  </td>
                </tr>
              )
            }
          }
        render(){
          return(
            <div>
              <button id='duplicateButtons' counter={this.counter} onClick={this.elementCounter}>new button</button>
              <table>
                <tbody>
                  {this.buttonArray}
                </tbody>
              </table>
            </div>
          )
        }
        componentWillMount() {
            console.log('componentWillMount')
         }
         componentDidMount() {
             console.log('componentDidMount')
         }
         componentWillReceiveProps(newProps) {
             console.log('componentWillReceiveProps')
        }
         // shouldComponentUpdate(newProps, newState) {
         //     console.log('shouldComponentUpdate')
         // }
         componentWillUpdate(nextProps, nextState) {
             console.log('componentWillUpdate')
         }
         componentDidUpdate(prevProps, prevState) {
            this.buttonArray = []
         }
         componentWillUnmount() {
             console.log('componentWillUnmount')
         }
      }
      ReactDOM.render(<DuplicateElements />, document.getElementById('app'))
    </script>
  </body>
  </html>
